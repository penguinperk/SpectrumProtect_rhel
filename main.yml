---
- hosts: all
  become: yes
  
  vars_files: 
    - vars/default.config.yml
    - vault.yml

  tasks:
    - name: Disable SELinux
      selinux:
        state: disabled
      register: result
      failed_when: result.msg | default('ok', True) is not search('(^ok$|libselinux-python|(SELinux state changed))')
    
    - name: add groups
      group:
        name: "{{ item }}"
      with_items:
        - sudo
        - tsmgrp
    
    - name: Copy customized sudoers file in place
      copy:
        src: files/sudo
        dest: /etc/sudoers.d/sudo
        validate: /usr/sbin/visudo -csf %s

    - name: Application install
      package: 
        state: present
        name:
        - ksh
        - lvm2
        - python3.x86_64
        - python3-pip
      vars:
        ansible_python_interpreter: /usr/bin/python


    - name: installing pip packages 
      pip:
        name:
          - boto3
          - botocore
      vars:
        ansible_python_interpreter: /usr/bin/python3

    - name: more complex items to add several users
      user:
        name: "{{ item.name }}"
        uid: "{{ item.uid }}"
        groups: "{{ item.groups }}"
        state: present
      with_items:
        - { name: tsminst1, uid: 1001, groups: "tsmgrp, sudo" }
        - { name: lrsperkins, uid: 1002, groups: sudo }

  #TODO: set password
  #
    - name: Creating Spectrum Protect Directories
      file:
        path: "{{ item }}"
        state: directory
        mode: "774"
        owner: tsminst1
        group: tsmgrp
      with_items:
        - '/tsm/db'
        - '/tsm/db/db1'
        - '/tsm/db/db2'
        - '/tsm/db/db3'
        - '/tsm/db/db4'
        - '/tsm/log'
        - '/tsm/log/active'
        - '/tsm/log/archive'
        - '/tsm/log/archfail'
        - '/tsm/config'
        - '/tsm/dbbackup'
        - '/tsm/dbbackup/dbbackup1'

    - name: Create LVM Volumes for Spectrum Protect
      include_tasks: tasks/lvm.yml

    - name: Formating Volumes for Spectrum Protect 
      include_tasks: tasks/mkfs.yml
    
    - name: Creating Spectrum Protect Download Directories
      file:
        path: /tmp/SP_Server
        state: directory
        recurse: yes
        mode: "776"
        owner: lrsperkins
        group: lrsperkins
    
    - name: Validate if file has been downloaded
      stat:
        path: /tmp/SP_Server/SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
      register: stat_results

    - name: copy Spectrum Protect from S3
      aws_s3:
        aws_access_key: "{{ access_AWS }}"
        aws_secret_key: "{{ secret_AWS }}"
        bucket: lrs-spectrumprotect-build
        object: Downloads/SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
        dest: /tmp/SP_Server/SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
        mode: get
      vars:
        ansible_python_interpreter: /usr/bin/python3
      when: not stat_results.stat.exists

    - name: change permissions of Spectrum Protect file for extraction
      file:
        path: /tmp/SP_Server/SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
        mode: '777'
        owner: lrsperkins
        group: lrsperkins

        #- name: Unarchive
        # unarchive:
        # src: /tmp/SP_Server/SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
        # dest: /tmp/SP_Server
        # remote_src: yes
        # mode: 777

    - name: Extract Spectrum Protect Application
      shell:
        cmd: ./SP_8.1.9_LIN86_SERSTG_AGT_ML.bin
        chdir: /tmp/SP_Server
      args:
        chdir: /tmp/SP_Server
        creates: install.sh
      register: SP_extract



      # - debug:
      #  var: SP_extract
